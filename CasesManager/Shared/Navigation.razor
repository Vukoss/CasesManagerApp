@using System.Security.Claims
@using CaseManagerLibrary.Utility
@using CaseManagerLibrary.Data.UOW
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUnitOfWork unitOfWork

<AuthorizeView Roles="Administrator, User">
    <Authorized>
        <div class="navigation">
            <div class="container">
                <nav>
                    <div class="d-flex align-items-center justify-content-between">
                        <ul class="d-flex">
                            <li>
                                <a class="nav-link d-flex align-items-center @(activeLink == "dashboard" ? "active" : "")"
                                         href="/"
                                         @onclick='() => ActiveLinkToggle("dashboard")'>
                                    <span class="material-symbols-outlined me-1">
                                        home
                                    </span>
                                    <span class="align-middle">Dashboard</span>
                                </a>
                            </li>
                            <li>
                                <a class="nav-link d-flex align-items-center @(activeLink == "allcases" ? "active" : "")"
                                         @onclick='() => ActiveLinkToggle("allcases")'
                                         href="/allcases">
                                    <span class="material-symbols-outlined me-1">
                                        checklist
                                    </span>
                                    <span class="align-middle">Wszystkie zlecenia</span>
                                </a>
                            </li>
                        </ul>
                        <div class="d-flex">
                            <form method="post" action="Identity/Account/Logout">
                                <button type="submit" class="nav-link btn btn-link">Wyloguj się</button>
                            </form>
                            @if (claimsPrincipal.IsInRole(SD.admin))
                            {
                                <a class="nav-link btn btn-link" href="Identity/Account/Register">Zarejestruj nowego użytkownika</a>
                            }
                        </div>
                    </div>
                </nav>

            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="navigation">
            <div class="container">
                <nav class="d-flex justify-content-end align-items-center">
                    <a class="nav-link" href="Identity/Account/Login">Zaloguj się</a>
                </nav>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    private string activeLink = "dashboard";

    private ClaimsPrincipal claimsPrincipal;

    private AuthenticationState authenticationState;

    protected override async Task OnInitializedAsync()
    {
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        claimsPrincipal = authenticationState.User;
    }

    private void ActiveLinkToggle(string link)
    {
        activeLink = link;
    }
}